*onjin.txt*            For Neovim >= 0.8.0            Last change: 2025 May 07

==============================================================================
Table of Contents                                    *onjin-table-of-contents*

1. Personal neovim configuration.       |onjin-personal-neovim-configuration.|
  - Features                   |onjin-personal-neovim-configuration.-features|
  - Local .nvimrc.ini config for global variables|onjin-personal-neovim-configuration.-local-.nvimrc.ini-config-for-global-variables|
  - Screenshots             |onjin-personal-neovim-configuration.-screenshots|
  - Install by git       |onjin-personal-neovim-configuration.-install-by-git|
  - Requirements for python|onjin-personal-neovim-configuration.-requirements-for-python|
  - Nice to have           |onjin-personal-neovim-configuration.-nice-to-have|
2. Links                                                         |onjin-links|

==============================================================================
1. Personal neovim configuration.       *onjin-personal-neovim-configuration.*

Mostly used for DevOps and Python (web) development. black #112233 #000000
#ff0000

In neovim help:

>
    :help onjin
<


FEATURES                       *onjin-personal-neovim-configuration.-features*

- Plugins manager — https://github.com/folke/lazy.nvim
- Support for `.editorconfig` — https://github.com/editorconfig/editorconfig-vim
- Fuzzy search engine https://github.com/nvim-telescope/telescope.nvim
- Intellisense engine https://github.com/neovim/nvim-lspconfig + https://github.com/williamboman/mason-lspconfig.nvim
- AI support https://github.com/jcdickinson/codeium.nvim - free code assistance https://codeium.com/pricing (set .nvimrc.ini or vim.g.ai_enabled directly to enable)
- Displays available keybindings in popup — https://github.com/folke/which-key.nvim

For a full list of plugins refer to
https://github.com/onjin/.vim/blob/main/lua/plugins/


LOCAL .NVIMRC.INI CONFIG FOR GLOBAL VARIABLES*onjin-personal-neovim-configuration.-local-.nvimrc.ini-config-for-global-variables*

By creating `.nvimrc.ini` file in your project folder you can set global
variables.

>dosini
    ;enable AI codeium
    ai_enabled = 1
    
    ;enable autoformat on save
    autoformat_on_save_enabled = 1
    
    ; set leader key
    mapleader = ' '
<


SCREENSHOTS                 *onjin-personal-neovim-configuration.-screenshots*

Which key keybindings popup, just press `,` and wait for help

LSP support

Markdown live preview


INSTALL BY GIT           *onjin-personal-neovim-configuration.-install-by-git*

Make sure you move old `~/.vim` to f.i. `~/.vim.old` then you can go

**Requirements**some plugins require `rust` already installed (f.e. `blam`).

>
    git clone https://github.com/onjin/nvim ~/.config/nvim
<

Plugins should be installed at first run of editor. If not, then run `:Lazy` to
do it manually.

Discover shortcuts:

- `,` or `<space>` to get help for leader keys from `which-key`


REQUIREMENTS FOR PYTHON*onjin-personal-neovim-configuration.-requirements-for-python*

- pynvim

>
    pip install pynvim
<


NICE TO HAVE               *onjin-personal-neovim-configuration.-nice-to-have*

- Nerd Icons - https://www.nerdfonts.com/

==============================================================================
2. Links                                                         *onjin-links*

1. *Screenshot*: https://github.com/onjin/nvim/assets/44516/a689b08b-632d-47f9-ba14-a69afa84aac5
2. *Screenshot*: https://github.com/onjin/nvim/assets/44516/00d7de32-539a-435f-8acd-c98a6b185d31
3. *Screenshot*: https://github.com/onjin/nvim/assets/44516/0678cc18-c93d-483d-a1dd-5d7213190efe

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
