*onjin.txt*            For Neovim >= 0.8.0           Last change: 2023 June 19

==============================================================================
Table of Contents                                    *onjin-table-of-contents*

1. Personal neovim configuration.       |onjin-personal-neovim-configuration.|
  - Features                   |onjin-personal-neovim-configuration.-features|
  - Screenshots             |onjin-personal-neovim-configuration.-screenshots|
  - Install by git       |onjin-personal-neovim-configuration.-install-by-git|
  - Daily usage             |onjin-personal-neovim-configuration.-daily-usage|
  - Integrations           |onjin-personal-neovim-configuration.-integrations|
  - Requirements for python|onjin-personal-neovim-configuration.-requirements-for-python|
  - Nice to have           |onjin-personal-neovim-configuration.-nice-to-have|

==============================================================================
1. Personal neovim configuration.       *onjin-personal-neovim-configuration.*

Mostly used for DevOps and Python (web) development.


FEATURES                       *onjin-personal-neovim-configuration.-features*

- Plugins manager — https://github.com/folke/lazy.nvim
- Support for `.editorconfig` — https://github.com/editorconfig/editorconfig-vim
- Fuzzy search engine https://github.com/nvim-telescope/telescope.nvim
- Intellisense engine https://github.com/neovim/nvim-lspconfig + https://github.com/williamboman/mason-lspconfig.nvim
- AI support https://github.com/jcdickinson/codeium.nvim - free code assistance https://codeium.com/pricing
- Displays available keybindings in popup — https://github.com/liuchengxu/vim-which-key

For a full list of plugins refer to
https://github.com/onjin/.vim/blob/main/lua/plugins/init.lua


SCREENSHOTS                 *onjin-personal-neovim-configuration.-screenshots*

Which key keybindings popup, just press `,` and wait for help

LSP support

Markdown live preview


INSTALL BY GIT           *onjin-personal-neovim-configuration.-install-by-git*

Make sure you move old `~/.vim` to f.i. `~/.vim.old` then you can go

**Requirements**some plugins require `rust` already installed (f.e. `blam`).

>
    git clone https://github.com/onjin/nvim ~/.config/nvim
<

Plugins should be installed at first run of editor. If not, then run `:Lazy` to
do it manually.


DAILY USAGE                 *onjin-personal-neovim-configuration.-daily-usage*

Discover shortcuts:

- `,` or `<space>` to get help for leader keys from `which-key`
- `<ctrl-p>` - to get available all commands registered which `which-key` displayed by `legendary.vim`

Common shortcuts:

- `<ctrl-[hjkl]>` - to move cursor between splits and/or tmux splits (look
    integration doc below)
- `<space>f` - fuzzy search files for current directory
- `<space>g` - fuzzy search GIT files for current (or searched for `.git` upward)
    directory
- `<space>X` - to open buffer’s management menu, or `<space>x` to just close
    current buffer
- `,z` - toogle `zoom` for current buffer
- `,ld` - show current line diagnostics in popup
- `,q` - quick load all diagnostics messages in `loclist`
- `,fm` - format current buffer using LSP
- `,ca` - show code action selector, `q` to close
- `,ra` - open rename action selector
- `gd` - goto current symbol definition, `<ctrl-o>` to get back, and back and
    back, …
- `gp` - peek definition in popup window, `q` to close it
- `K` - show symbol’s docstring in popup window, move cursor to exit

Update:

- `:Lazy` to install/update/clean plugins
- `:Mason` to install/update/clean LSP servers/formatters/DAPs/linters

Syntax highlighting:

- `TSInstallInfo` - display info about installed/available TreeSitter syntax
- `TSInstall <name>` - install TreeSitter syntax


INTEGRATIONS               *onjin-personal-neovim-configuration.-integrations*

**tmux**

Addthese lines to `tmux` to move around vim/tmux splits with same shortcuts

>ini
     smart pane switching with awareness of vim splits
    bind -n C-h run "(tmux display-message -p '{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
    bind -n C-j run "(tmux display-message -p '{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
    bind -n C-k run "(tmux display-message -p '{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
    bind -n C-l run "(tmux display-message -p '{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
    bind -n C-\\ run "(tmux display-message -p '{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
<


REQUIREMENTS FOR PYTHON*onjin-personal-neovim-configuration.-requirements-for-python*

- pynvim

>
    pip install pynvim
<


NICE TO HAVE               *onjin-personal-neovim-configuration.-nice-to-have*

- Nerd Icons - https://www.nerdfonts.com/

==============================================================================
2. Links                                                         *onjin-links*

1. *Screenshot*: https://user-images.githubusercontent.com/44516/162916448-0d41d3e6-96e2-4ab4-92f0-6e4f7fcc1f8c.png
2. *Screenshot*: https://user-images.githubusercontent.com/44516/162918787-1c788b22-51db-4c9a-888a-f5cfc4abcc79.png
3. *Screenshot*: https://user-images.githubusercontent.com/44516/162917974-f36a192c-3347-476d-91e0-e22f2e1bf916.png

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
